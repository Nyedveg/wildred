[gd_resource type="ShaderMaterial" load_steps=4 format=3 uid="uid://4bkclx5ivjdd"]

[sub_resource type="Shader" id="Shader_mh656"]
code = "shader_type spatial;

render_mode unshaded, cull_back, blend_mix;

uniform sampler2D noise_texture : source_color;
uniform sampler2D SCREEN_TEXTURE : hint_screen_texture, filter_linear_mipmap;

uniform float strength = 0.05;
uniform float speed = 1.0;

/*void vertex() {
	// Create a billboard transformation matrix using the inverse view matrix
	mat4 billboard = mat4(
		normalize(INV_VIEW_MATRIX[0]),  // Right
		normalize(INV_VIEW_MATRIX[1]),  // Up
		normalize(INV_VIEW_MATRIX[2]),  // Forward
		MODEL_MATRIX[3]                 // Position
	);

	// Apply billboard transform to the vertex
	VERTEX = (billboard * vec4(VERTEX, 1.0)).xyz;
}*/

void fragment() {
	vec2 uv = SCREEN_UV;
	float time = TIME * speed;

	vec2 noise_uv = UV + vec2(time * 0.1, time * 0.1);
	vec2 noise = texture(noise_texture, noise_uv).rg - 0.5;
	uv += noise * strength;

	vec3 screen_color = texture(SCREEN_TEXTURE, uv).rgb;
	ALBEDO = screen_color;
	ALPHA = 0.7;
}"

[sub_resource type="FastNoiseLite" id="FastNoiseLite_mh656"]
noise_type = 3

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_hgvnf"]
seamless = true
noise = SubResource("FastNoiseLite_mh656")

[resource]
render_priority = 0
shader = SubResource("Shader_mh656")
shader_parameter/noise_texture = SubResource("NoiseTexture2D_hgvnf")
shader_parameter/strength = 0.05
shader_parameter/speed = 0.5
